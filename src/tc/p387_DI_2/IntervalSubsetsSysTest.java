

package tc.p387_DI_2;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import static org.junit.Assert.*;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class IntervalSubsetsSysTest {

  IntervalSubsets solver; 

  @Before
  public void setUp() {
    solver = new IntervalSubsets();
  }

  

  @Test
  public void test0(){
    assertEquals(1, solver.numberOfSubsets(new int[]{3},new int[]{4}) );
  }



  @Test
  public void test1(){
    assertEquals(1, solver.numberOfSubsets(new int[]{68, 25},new int[]{75, 64}) );
  }



  @Test
  public void test2(){
    assertEquals(2, solver.numberOfSubsets(new int[]{4, 2, 3},new int[]{4, 5, 3}) );
  }



  @Test
  public void test3(){
    assertEquals(3, solver.numberOfSubsets(new int[]{36, 74, 8, 33},new int[]{63, 91, 57, 51}) );
  }



  @Test
  public void test4(){
    assertEquals(5, solver.numberOfSubsets(new int[]{3, 4, 3, 2, 1},new int[]{4, 5, 4, 5, 5}) );
  }



  @Test
  public void test5(){
    assertEquals(5, solver.numberOfSubsets(new int[]{23, 34, 69, 25, 61, 48},new int[]{25, 70, 95, 39, 74, 60}) );
  }



  @Test
  public void test6(){
    assertEquals(8, solver.numberOfSubsets(new int[]{1, 4, 2, 5, 3, 4, 3},new int[]{2, 5, 2, 5, 4, 5, 4}) );
  }



  @Test
  public void test7(){
    assertEquals(6, solver.numberOfSubsets(new int[]{26, 22, 2, 36, 16, 84, 50, 30},new int[]{87, 42, 76, 85, 53, 100, 76, 57}) );
  }



  @Test
  public void test8(){
    assertEquals(14, solver.numberOfSubsets(new int[]{2, 3, 4, 4, 4, 4, 2, 2, 1},new int[]{3, 5, 4, 5, 4, 5, 3, 2, 4}) );
  }



  @Test
  public void test9(){
    assertEquals(17, solver.numberOfSubsets(new int[]{24, 80, 7, 68, 29, 26, 77, 30, 17, 5},new int[]{72, 92, 46, 80, 45, 92, 82, 49, 73, 65}) );
  }



  @Test
  public void test10(){
    assertEquals(12, solver.numberOfSubsets(new int[]{4, 1, 1, 3, 1, 1, 3, 2, 2, 1, 1},new int[]{4, 2, 4, 4, 4, 2, 5, 4, 3, 5, 3}) );
  }



  @Test
  public void test11(){
    assertEquals(10, solver.numberOfSubsets(new int[]{15, 2, 55, 38, 20, 43, 5, 63, 85, 53, 13, 24},new int[]{84, 81, 61, 68, 51, 59, 34, 67, 97, 89, 55, 88}) );
  }



  @Test
  public void test12(){
    assertEquals(20, solver.numberOfSubsets(new int[]{3, 1, 3, 2, 2, 4, 4, 4, 4, 3, 4, 2, 2},new int[]{4, 5, 4, 4, 3, 5, 5, 5, 4, 4, 4, 3, 3}) );
  }



  @Test
  public void test13(){
    assertEquals(12, solver.numberOfSubsets(new int[]{18, 80, 30, 72, 58, 66, 45, 17, 15, 58, 31, 47, 22, 44},new int[]{74, 88, 71, 79, 63, 98, 53, 41, 90, 62, 69, 93, 72, 58}) );
  }



  @Test
  public void test14(){
    assertEquals(20, solver.numberOfSubsets(new int[]{1, 1, 3, 1, 3, 2, 3, 1, 1, 3, 3, 1, 2, 3, 3},new int[]{2, 5, 5, 3, 4, 3, 3, 5, 3, 4, 5, 2, 5, 5, 4}) );
  }



  @Test
  public void test15(){
    assertEquals(20, solver.numberOfSubsets(new int[]{27, 24, 26, 8, 15, 8, 7, 36, 14, 51, 66, 4, 35, 26, 66, 13},new int[]{44, 30, 32, 75, 94, 65, 17, 56, 75, 70, 88, 95, 97, 93, 83, 64}) );
  }



  @Test
  public void test16(){
    assertEquals(26, solver.numberOfSubsets(new int[]{2, 4, 2, 4, 2, 1, 4, 1, 3, 3, 2, 3, 1, 2, 3, 2, 4},new int[]{5, 5, 5, 5, 3, 1, 4, 3, 5, 4, 5, 3, 3, 3, 5, 2, 5}) );
  }



  @Test
  public void test17(){
    assertEquals(25, solver.numberOfSubsets(new int[]{6, 40, 48, 3, 37, 23, 35, 28, 2, 16, 47, 60, 9, 14, 42, 40, 28, 29},new int[]{34, 100, 73, 81, 44, 55, 64, 65, 7, 53, 66, 74, 47, 67, 61, 58, 91, 42}) );
  }



  @Test
  public void test18(){
    assertEquals(38, solver.numberOfSubsets(new int[]{4, 1, 2, 2, 2, 1, 2, 1, 5, 3, 2, 1, 2, 4, 2, 1, 1, 2, 5},new int[]{5, 3, 4, 5, 3, 3, 4, 2, 5, 4, 3, 5, 3, 4, 3, 3, 5, 2, 5}) );
  }



  @Test
  public void test19(){
    assertEquals(41, solver.numberOfSubsets(new int[]{49, 30, 21, 35, 33, 40, 31, 1, 45, 58, 48, 63, 59, 49, 71, 43, 22, 11, 75, 8},new int[]{49, 87, 40, 81, 55, 50, 49, 44, 85, 99, 93, 93, 87, 99, 89, 91, 98, 53, 98, 92}) );
  }



  @Test
  public void test20(){
    assertEquals(49, solver.numberOfSubsets(new int[]{4, 4, 1, 2, 1, 2, 3, 3, 2, 2, 3, 2, 2, 1, 1, 4, 1, 2, 1, 1, 1},new int[]{5, 5, 2, 4, 5, 2, 5, 3, 2, 3, 5, 2, 2, 2, 4, 5, 5, 4, 4, 2, 2}) );
  }



  @Test
  public void test21(){
    assertEquals(32, solver.numberOfSubsets(new int[]{14, 30, 4, 62, 33, 59, 36, 29, 53, 25, 32, 14, 16, 11, 28, 11, 54, 6, 43, 32, 63, 39},new int[]{77, 44, 60, 95, 48, 77, 60, 84, 93, 38, 66, 77, 76, 92, 82, 56, 90, 24, 71, 87, 88, 74}) );
  }



  @Test
  public void test22(){
    assertEquals(52, solver.numberOfSubsets(new int[]{1, 3, 4, 2, 4, 3, 1, 2, 2, 2, 3, 3, 1, 1, 5, 2, 4, 2, 1, 3, 1, 2, 4},new int[]{4, 5, 5, 3, 4, 5, 3, 4, 5, 5, 4, 3, 4, 5, 5, 2, 5, 4, 2, 3, 2, 3, 5}) );
  }



  @Test
  public void test23(){
    assertEquals(40, solver.numberOfSubsets(new int[]{46, 15, 69, 44, 49, 27, 16, 29, 28, 13, 5, 63, 38, 6, 7, 83, 32, 22, 16, 9, 56, 29, 35, 3},new int[]{68, 83, 74, 88, 89, 70, 79, 58, 64, 17, 46, 70, 40, 76, 72, 99, 97, 94, 98, 19, 94, 74, 50, 74}) );
  }



  @Test
  public void test24(){
    assertEquals(42, solver.numberOfSubsets(new int[]{3, 1, 2, 5, 3, 2, 1, 1, 1, 3, 1, 3, 1, 2, 2, 3, 1, 1, 4, 2, 3, 2, 3, 3, 2},new int[]{5, 3, 3, 5, 4, 3, 3, 2, 2, 4, 5, 5, 5, 4, 3, 5, 1, 2, 4, 2, 3, 3, 4, 5, 5}) );
  }



  @Test
  public void test25(){
    assertEquals(61, solver.numberOfSubsets(new int[]{36, 34, 5, 31, 12, 21, 50, 7, 26, 6, 13, 47, 14, 84, 29, 26, 37, 13, 17, 21, 9, 52, 72, 16, 13, 7},new int[]{68, 81, 28, 36, 26, 97, 66, 89, 94, 97, 89, 100, 47, 87, 98, 57, 67, 31, 64, 22, 41, 98, 97, 57, 94, 49}) );
  }



  @Test
  public void test26(){
    assertEquals(90, solver.numberOfSubsets(new int[]{2, 4, 3, 3, 1, 1, 1, 1, 1, 4, 1, 1, 5, 2, 2, 3, 1, 2, 2, 1, 3, 3, 1, 2, 5, 4, 2},new int[]{4, 5, 4, 4, 5, 5, 1, 1, 1, 5, 5, 2, 5, 3, 4, 5, 4, 5, 5, 4, 4, 4, 4, 5, 5, 5, 4}) );
  }



  @Test
  public void test27(){
    assertEquals(86, solver.numberOfSubsets(new int[]{1, 32, 60, 70, 43, 47, 32, 6, 25, 49, 4, 70, 54, 6, 32, 19, 7, 28, 43, 13, 27, 26, 9, 49, 48, 3, 15, 67},new int[]{79, 96, 74, 81, 62, 65, 98, 37, 50, 53, 88, 73, 63, 97, 43, 35, 71, 56, 66, 43, 35, 51, 83, 88, 86, 72, 63, 72}) );
  }



  @Test
  public void test28(){
    assertEquals(68, solver.numberOfSubsets(new int[]{1, 3, 2, 1, 2, 1, 2, 3, 3, 1, 1, 1, 1, 2, 1, 2, 3, 1, 2, 4, 1, 1, 4, 1, 1, 1, 1, 1, 1},new int[]{5, 5, 2, 2, 5, 4, 2, 3, 3, 3, 5, 5, 4, 4, 4, 5, 5, 1, 3, 5, 3, 1, 5, 4, 2, 2, 3, 3, 4}) );
  }



  @Test
  public void test29(){
    assertEquals(82, solver.numberOfSubsets(new int[]{37, 7, 49, 30, 70, 2, 11, 29, 7, 4, 10, 2, 21, 84, 18, 50, 25, 21, 18, 51, 12, 43, 63, 15, 87, 68, 57, 41, 4, 41},new int[]{43, 16, 64, 81, 99, 54, 64, 51, 95, 33, 88, 57, 47, 86, 43, 98, 88, 52, 71, 90, 24, 86, 85, 91, 96, 79, 89, 79, 50, 56}) );
  }



  @Test
  public void test30(){
    assertEquals(77, solver.numberOfSubsets(new int[]{2, 3, 2, 2, 2, 1, 1, 1, 3, 4, 2, 2, 1, 3, 4, 4, 1, 2, 2, 2, 3, 4, 2, 1, 4, 2, 2, 1, 1, 1, 1},new int[]{3, 4, 3, 4, 5, 2, 3, 3, 4, 5, 3, 4, 2, 5, 4, 5, 4, 3, 5, 2, 4, 4, 4, 4, 5, 4, 3, 5, 1, 5, 3}) );
  }



  @Test
  public void test31(){
    assertEquals(141, solver.numberOfSubsets(new int[]{6, 18, 9, 34, 22, 73, 34, 23, 19, 8, 26, 43, 25, 26, 23, 31, 58, 69, 92, 29, 2, 47, 50, 36, 12, 20, 47, 49, 22, 12, 8, 18},new int[]{23, 36, 93, 40, 28, 80, 76, 26, 37, 27, 55, 76, 53, 100, 45, 65, 78, 96, 92, 65, 54, 47, 69, 99, 33, 24, 52, 66, 70, 38, 32, 82}) );
  }



  @Test
  public void test32(){
    assertEquals(103, solver.numberOfSubsets(new int[]{1, 3, 1, 1, 1, 2, 2, 2, 3, 1, 3, 2, 1, 3, 3, 4, 2, 4, 4, 2, 1, 4, 1, 2, 1, 4, 3, 1, 3, 2, 1, 1, 1},new int[]{5, 4, 3, 5, 5, 5, 4, 4, 4, 5, 3, 3, 5, 5, 5, 5, 4, 5, 5, 4, 3, 5, 1, 4, 5, 5, 3, 1, 4, 3, 2, 3, 3}) );
  }



  @Test
  public void test33(){
    assertEquals(91, solver.numberOfSubsets(new int[]{17, 9, 9, 6, 26, 35, 23, 49, 57, 86, 29, 28, 58, 9, 47, 26, 67, 30, 22, 29, 15, 56, 32, 9, 36, 21, 2, 21, 44, 52, 46, 72, 3, 4},new int[]{67, 83, 24, 97, 70, 67, 58, 54, 73, 90, 89, 75, 99, 49, 85, 83, 77, 78, 90, 57, 65, 91, 43, 26, 94, 65, 87, 70, 76, 66, 47, 90, 30, 17}) );
  }



  @Test
  public void test34(){
    assertEquals(128, solver.numberOfSubsets(new int[]{3, 1, 2, 2, 2, 1, 2, 1, 3, 3, 2, 2, 2, 1, 2, 3, 3, 1, 2, 3, 2, 3, 1, 1, 2, 2, 2, 1, 3, 4, 1, 4, 3, 4, 3},new int[]{3, 2, 3, 2, 5, 5, 4, 4, 3, 5, 3, 2, 4, 3, 3, 5, 4, 4, 3, 5, 4, 4, 3, 3, 2, 2, 3, 4, 4, 4, 2, 5, 3, 5, 5}) );
  }



  @Test
  public void test35(){
    assertEquals(362, solver.numberOfSubsets(new int[]{22, 64, 13, 36, 3, 11, 15, 90, 11, 91, 77, 34, 38, 81, 36, 24, 1, 10, 82, 54, 4, 37, 54, 51, 53, 40, 2, 47, 54, 13, 13, 76, 72, 17, 4, 35},new int[]{94, 77, 94, 79, 27, 24, 41, 91, 19, 93, 90, 86, 81, 96, 40, 76, 88, 48, 97, 73, 95, 73, 70, 61, 64, 94, 82, 70, 99, 91, 15, 98, 100, 99, 77, 49}) );
  }



  @Test
  public void test36(){
    assertEquals(99, solver.numberOfSubsets(new int[]{1, 1, 1, 1, 1, 3, 2, 1, 4, 1, 3, 3, 2, 2, 1, 1, 5, 1, 3, 2, 1, 3, 2, 2, 3, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1},new int[]{5, 2, 4, 5, 1, 5, 3, 3, 5, 4, 4, 4, 4, 3, 3, 3, 5, 5, 4, 5, 5, 5, 5, 4, 4, 1, 2, 3, 1, 4, 4, 3, 3, 4, 5, 1, 4}) );
  }



  @Test
  public void test37(){
    assertEquals(238, solver.numberOfSubsets(new int[]{89, 72, 55, 35, 43, 13, 20, 45, 1, 33, 44, 34, 33, 28, 15, 16, 36, 7, 78, 73, 18, 18, 22, 14, 36, 27, 20, 36, 38, 1, 14, 51, 15, 91, 3, 65, 59, 13},new int[]{99, 87, 60, 82, 85, 29, 27, 96, 58, 92, 49, 99, 48, 75, 35, 51, 59, 77, 81, 77, 81, 43, 61, 45, 88, 35, 90, 43, 57, 85, 100, 68, 67, 96, 34, 93, 70, 86}) );
  }



  @Test
  public void test38(){
    assertEquals(163, solver.numberOfSubsets(new int[]{2, 3, 2, 1, 3, 1, 1, 1, 2, 2, 3, 2, 2, 2, 1, 3, 1, 3, 3, 1, 1, 3, 3, 4, 4, 1, 3, 1, 4, 2, 5, 2, 2, 3, 1, 3, 2, 3, 2},new int[]{5, 4, 3, 5, 5, 4, 2, 4, 3, 4, 4, 3, 3, 3, 4, 5, 2, 5, 5, 2, 2, 3, 5, 5, 5, 4, 3, 2, 5, 2, 5, 2, 5, 5, 5, 5, 3, 4, 3}) );
  }



  @Test
  public void test39(){
    assertEquals(252, solver.numberOfSubsets(new int[]{22, 48, 1, 3, 17, 20, 68, 21, 2, 92, 15, 50, 23, 53, 28, 1, 46, 59, 6, 3, 19, 50, 2, 45, 56, 5, 24, 59, 6, 59, 63, 20, 11, 8, 65, 75, 32, 10, 8, 16},new int[]{54, 70, 34, 15, 60, 59, 76, 70, 66, 96, 97, 55, 67, 61, 31, 46, 52, 82, 44, 33, 21, 90, 43, 72, 61, 22, 82, 59, 80, 89, 89, 60, 25, 64, 97, 91, 70, 94, 99, 58}) );
  }



  @Test
  public void test40(){
    assertEquals(197, solver.numberOfSubsets(new int[]{1, 1, 1, 5, 1, 1, 4, 4, 1, 4, 5, 2, 2, 2, 2, 2, 2, 1, 2, 3, 5, 2, 4, 1, 3, 2, 3, 3, 1, 3, 3, 2, 3, 2, 1, 1, 2, 3, 1, 1, 4},new int[]{5, 5, 2, 5, 3, 3, 4, 5, 4, 5, 5, 5, 5, 5, 5, 4, 5, 3, 5, 4, 5, 3, 5, 2, 3, 4, 3, 3, 5, 5, 5, 4, 3, 4, 5, 5, 3, 5, 2, 2, 5}) );
  }



  @Test
  public void test41(){
    assertEquals(163, solver.numberOfSubsets(new int[]{87, 18, 28, 39, 23, 6, 52, 7, 35, 58, 30, 10, 30, 21, 40, 53, 32, 53, 9, 15, 50, 65, 41, 26, 9, 40, 10, 34, 9, 6, 19, 25, 60, 65, 53, 50, 43, 27, 59, 49, 42, 19},new int[]{100, 49, 60, 72, 95, 35, 98, 39, 64, 75, 68, 97, 63, 65, 75, 81, 44, 98, 20, 45, 58, 94, 55, 68, 66, 67, 71, 95, 41, 38, 52, 84, 71, 67, 86, 51, 78, 93, 69, 72, 80, 79}) );
  }



  @Test
  public void test42(){
    assertEquals(567, solver.numberOfSubsets(new int[]{1, 1, 3, 2, 2, 2, 4, 3, 2, 5, 3, 3, 1, 3, 4, 1, 2, 2, 5, 1, 3, 2, 2, 1, 4, 1, 1, 1, 3, 4, 2, 1, 1, 1, 1, 5, 3, 1, 2, 3, 1, 2, 3},new int[]{1, 3, 3, 4, 5, 4, 5, 5, 4, 5, 3, 3, 2, 4, 5, 1, 4, 2, 5, 1, 5, 3, 5, 2, 4, 4, 3, 5, 5, 4, 4, 4, 3, 5, 2, 5, 4, 3, 2, 4, 3, 2, 5}) );
  }



  @Test
  public void test43(){
    assertEquals(206, solver.numberOfSubsets(new int[]{35, 29, 16, 1, 12, 13, 12, 84, 48, 39, 40, 68, 29, 7, 41, 3, 37, 70, 92, 10, 28, 29, 27, 70, 78, 69, 16, 9, 65, 45, 34, 99, 39, 10, 25, 50, 5, 15, 14, 14, 25, 63, 25, 11},new int[]{65, 82, 47, 45, 44, 74, 56, 92, 99, 60, 45, 74, 65, 68, 51, 5, 88, 93, 94, 73, 66, 64, 66, 83, 83, 78, 79, 33, 97, 84, 73, 99, 77, 70, 47, 61, 96, 61, 82, 26, 51, 88, 67, 13}) );
  }



  @Test
  public void test44(){
    assertEquals(419, solver.numberOfSubsets(new int[]{1, 3, 1, 1, 3, 2, 2, 1, 3, 5, 4, 3, 4, 4, 2, 1, 1, 1, 1, 1, 2, 4, 3, 1, 1, 1, 1, 4, 1, 4, 1, 1, 3, 3, 4, 3, 2, 1, 2, 1, 2, 1, 2, 4, 1},new int[]{3, 5, 3, 1, 4, 4, 3, 4, 3, 5, 5, 4, 5, 5, 2, 2, 2, 2, 3, 4, 4, 4, 3, 1, 2, 3, 3, 5, 5, 4, 4, 3, 3, 3, 4, 5, 4, 5, 5, 2, 3, 4, 2, 5, 5}) );
  }



  @Test
  public void test45(){
    assertEquals(343, solver.numberOfSubsets(new int[]{59, 18, 10, 29, 79, 24, 86, 29, 51, 42, 50, 1, 57, 78, 32, 32, 8, 1, 73, 64, 65, 43, 20, 33, 21, 24, 1, 9, 69, 10, 49, 13, 7, 67, 15, 4, 77, 14, 45, 19, 20, 61, 11, 30, 81, 32},new int[]{93, 93, 84, 98, 96, 77, 100, 74, 69, 72, 56, 50, 77, 86, 40, 33, 75, 63, 82, 79, 94, 50, 50, 93, 34, 90, 86, 93, 99, 40, 88, 95, 80, 80, 56, 77, 98, 98, 66, 54, 64, 88, 27, 32, 89, 51}) );
  }



  @Test
  public void test46(){
    assertEquals(303, solver.numberOfSubsets(new int[]{2, 1, 2, 3, 4, 3, 4, 2, 3, 4, 1, 3, 4, 1, 4, 3, 3, 2, 2, 3, 2, 2, 3, 1, 3, 2, 1, 1, 1, 3, 4, 2, 2, 4, 4, 4, 2, 4, 1, 2, 1, 2, 1, 1, 1, 5, 4},new int[]{3, 2, 4, 5, 4, 5, 5, 5, 3, 5, 2, 5, 4, 3, 5, 4, 4, 3, 4, 5, 4, 4, 5, 4, 3, 3, 4, 5, 4, 4, 5, 3, 4, 4, 4, 4, 5, 5, 4, 5, 2, 3, 1, 3, 1, 5, 5}) );
  }



  @Test
  public void test47(){
    assertEquals(344, solver.numberOfSubsets(new int[]{30, 51, 11, 47, 14, 32, 44, 48, 26, 25, 26, 38, 4, 17, 33, 47, 88, 13, 37, 16, 3, 56, 54, 2, 77, 51, 61, 38, 32, 71, 45, 4, 10, 57, 10, 39, 57, 67, 34, 51, 39, 3, 3, 79, 77, 65, 25, 45},new int[]{85, 67, 55, 50, 91, 92, 70, 48, 30, 55, 39, 78, 89, 18, 80, 51, 95, 86, 49, 55, 59, 77, 87, 13, 84, 100, 85, 46, 58, 99, 97, 51, 45, 59, 80, 76, 90, 81, 82, 79, 75, 44, 83, 100, 93, 67, 35, 76}) );
  }



  @Test
  public void test48(){
    assertEquals(567, solver.numberOfSubsets(new int[]{4, 3, 1, 3, 5, 3, 1, 2, 2, 1, 2, 1, 3, 3, 4, 2, 2, 5, 3, 1, 3, 2, 1, 1, 2, 1, 2, 1, 2, 1, 4, 4, 2, 3, 5, 3, 1, 3, 2, 3, 1, 3, 4, 2, 2, 2, 3, 2, 1},new int[]{4, 5, 4, 5, 5, 3, 1, 5, 5, 5, 5, 2, 4, 3, 5, 3, 3, 5, 4, 4, 4, 3, 4, 5, 3, 1, 3, 3, 4, 1, 5, 4, 5, 5, 5, 4, 2, 5, 5, 4, 2, 4, 5, 4, 2, 4, 3, 3, 2}) );
  }



  @Test
  public void test49(){
    assertEquals(780, solver.numberOfSubsets(new int[]{1, 7, 82, 12, 47, 26, 21, 10, 77, 53, 77, 11, 40, 51, 95, 17, 49, 62, 65, 28, 36, 24, 11, 59, 13, 77, 3, 6, 3, 1, 28, 54, 19, 2, 9, 53, 20, 10, 39, 3, 43, 37, 58, 90, 30, 22, 6, 23, 6, 52},new int[]{33, 14, 99, 78, 79, 44, 61, 84, 88, 90, 96, 36, 98, 65, 98, 37, 62, 100, 95, 61, 74, 93, 70, 90, 86, 80, 32, 7, 58, 33, 30, 61, 43, 73, 65, 58, 72, 68, 45, 40, 97, 42, 75, 91, 80, 43, 69, 24, 81, 54}) );
  }



  @Test
  public void test50(){
    assertEquals(315, solver.numberOfSubsets(new int[]{1, 1, 2, 1, 2, 2, 1, 4, 2, 1, 2, 4, 4, 3, 4, 1, 1, 2, 1, 1, 1, 1, 1, 3, 2, 3, 3, 3, 2, 1, 2, 2, 1, 2, 3, 1, 3, 5, 4, 2, 1, 1, 3, 1, 1, 1, 1, 2, 4, 1},new int[]{4, 2, 5, 3, 5, 4, 3, 4, 5, 4, 5, 4, 4, 5, 4, 5, 3, 3, 2, 3, 1, 3, 4, 3, 2, 5, 3, 4, 4, 5, 2, 5, 1, 5, 4, 2, 5, 5, 5, 3, 2, 3, 5, 1, 4, 2, 3, 5, 4, 3}) );
  }



  @Test
  public void test51(){
    assertEquals(851, solver.numberOfSubsets(new int[]{16, 30, 57, 55, 54, 75, 51, 42, 1, 64, 13, 41, 3, 64, 70, 62, 5, 17, 8, 36, 31, 18, 82, 44, 21, 13, 62, 7, 20, 45, 51, 36, 74, 3, 2, 1, 4, 2, 53, 74, 4, 32, 84, 55, 31, 16, 46, 1, 5, 57},new int[]{71, 75, 76, 93, 84, 85, 77, 45, 96, 93, 22, 91, 62, 74, 73, 80, 85, 81, 32, 68, 33, 49, 84, 63, 34, 48, 77, 32, 100, 48, 97, 94, 86, 8, 95, 66, 15, 36, 70, 88, 39, 45, 100, 85, 41, 93, 76, 98, 74, 61}) );
  }



  @Test
  public void test52(){
    assertEquals(638, solver.numberOfSubsets(new int[]{2, 2, 1, 2, 3, 1, 4, 1, 2, 5, 4, 1, 1, 5, 4, 2, 1, 1, 3, 1, 1, 1, 4, 3, 5, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 1, 2, 1, 4, 1, 5, 2, 2, 2, 1, 2, 2, 1, 4, 1},new int[]{2, 2, 1, 5, 3, 2, 4, 3, 4, 5, 4, 2, 5, 5, 5, 3, 1, 4, 4, 2, 4, 2, 5, 3, 5, 2, 1, 4, 2, 4, 5, 5, 5, 5, 5, 2, 5, 5, 5, 5, 5, 5, 4, 5, 4, 5, 3, 4, 5, 2}) );
  }



  @Test
  public void test53(){
    assertEquals(425, solver.numberOfSubsets(new int[]{2, 12, 9, 18, 77, 50, 32, 17, 8, 61, 23, 35, 19, 20, 67, 46, 45, 65, 26, 34, 58, 54, 65, 12, 15, 45, 55, 18, 6, 4, 5, 55, 20, 20, 17, 7, 42, 26, 61, 54, 55, 77, 56, 14, 42, 3, 55, 72, 75, 97},new int[]{98, 25, 47, 43, 78, 92, 50, 94, 80, 68, 63, 61, 24, 53, 94, 97, 50, 84, 38, 71, 86, 89, 71, 54, 78, 97, 96, 70, 61, 56, 57, 96, 66, 69, 36, 50, 74, 71, 71, 66, 78, 86, 91, 78, 88, 29, 100, 90, 79, 99}) );
  }



  @Test
  public void test54(){
    assertEquals(422, solver.numberOfSubsets(new int[]{1, 1, 1, 2, 4, 1, 3, 1, 3, 3, 3, 1, 1, 1, 3, 1, 3, 2, 3, 2, 2, 5, 2, 1, 2, 1, 2, 2, 1, 1, 2, 4, 2, 1, 5, 1, 1, 1, 2, 1, 1, 4, 2, 1, 3, 1, 1, 1, 1, 5},new int[]{3, 5, 2, 5, 5, 4, 3, 2, 3, 5, 3, 4, 2, 4, 4, 2, 5, 2, 4, 3, 5, 5, 3, 2, 4, 4, 4, 2, 3, 3, 3, 5, 4, 5, 5, 3, 3, 5, 3, 3, 3, 5, 2, 2, 5, 2, 2, 3, 2, 5}) );
  }



  @Test
  public void test55(){
    assertEquals(238, solver.numberOfSubsets(new int[]{31, 43, 51, 1, 35, 1, 3, 18, 23, 32, 39, 53, 33, 36, 19, 45, 28, 6, 63, 20, 39, 62, 55, 11, 26, 68, 66, 10, 62, 10, 30, 16, 27, 40, 43, 31, 4, 50, 68, 1, 7, 14, 9, 50, 8, 20, 35, 10, 96, 70},new int[]{58, 59, 92, 12, 99, 83, 49, 71, 47, 76, 87, 96, 42, 74, 32, 89, 97, 27, 90, 89, 83, 88, 68, 100, 76, 97, 72, 53, 75, 42, 96, 27, 73, 56, 60, 76, 89, 70, 72, 78, 28, 68, 77, 94, 52, 59, 79, 65, 97, 93}) );
  }



  @Test
  public void test56(){
    assertEquals(360, solver.numberOfSubsets(new int[]{4, 1, 3, 2, 3, 1, 1, 1, 1, 1, 2, 3, 2, 3, 1, 1, 2, 1, 1, 4, 5, 3, 1, 3, 1, 2, 2, 1, 1, 5, 3, 1, 3, 5, 2, 1, 1, 4, 1, 4, 1, 4, 4, 2, 2, 3, 2, 2, 1, 3},new int[]{4, 2, 4, 5, 5, 1, 5, 4, 5, 4, 2, 3, 3, 3, 4, 3, 5, 3, 5, 5, 5, 5, 5, 5, 2, 3, 4, 3, 4, 5, 3, 2, 4, 5, 5, 2, 4, 5, 4, 5, 5, 5, 5, 3, 2, 5, 2, 4, 2, 5}) );
  }



  @Test
  public void test57(){
    assertEquals(390, solver.numberOfSubsets(new int[]{3, 6, 14, 6, 37, 52, 28, 11, 17, 3, 51, 63, 8, 19, 86, 6, 31, 46, 10, 87, 8, 34, 53, 7, 4, 13, 21, 50, 33, 68, 22, 41, 46, 3, 75, 28, 6, 45, 53, 4, 31, 8, 19, 39, 30, 21, 69, 38, 8, 24},new int[]{23, 77, 24, 84, 72, 75, 79, 95, 100, 85, 65, 96, 87, 95, 100, 65, 88, 72, 43, 93, 8, 39, 98, 95, 67, 74, 94, 55, 79, 74, 29, 58, 95, 22, 85, 70, 91, 78, 97, 67, 83, 19, 63, 68, 62, 54, 96, 49, 68, 26}) );
  }



  @Test
  public void test58(){
    assertEquals(683, solver.numberOfSubsets(new int[]{1, 2, 4, 3, 4, 2, 3, 3, 1, 2, 2, 1, 1, 1, 1, 5, 3, 3, 5, 1, 2, 1, 3, 2, 3, 4, 1, 4, 2, 1, 3, 5, 1, 3, 2, 4, 3, 3, 3, 2, 5, 1, 4, 3, 1, 3, 1, 2, 2, 2},new int[]{3, 4, 5, 4, 5, 4, 4, 3, 5, 3, 2, 4, 1, 4, 3, 5, 3, 5, 5, 3, 4, 4, 5, 2, 3, 4, 1, 4, 3, 5, 5, 5, 4, 5, 5, 5, 4, 5, 3, 4, 5, 2, 4, 4, 2, 4, 4, 5, 5, 4}) );
  }



  @Test
  public void test59(){
    assertEquals(487, solver.numberOfSubsets(new int[]{7, 1, 48, 34, 1, 68, 46, 52, 32, 68, 70, 20, 70, 16, 65, 24, 43, 8, 40, 29, 39, 15, 22, 61, 39, 8, 36, 87, 67, 12, 43, 22, 60, 20, 56, 10, 3, 24, 9, 5, 38, 6, 2, 45, 4, 47, 55, 31, 68, 3},new int[]{89, 25, 99, 66, 39, 88, 66, 87, 46, 71, 99, 77, 80, 61, 85, 29, 55, 84, 86, 39, 50, 97, 69, 90, 89, 60, 54, 99, 69, 81, 65, 62, 94, 100, 65, 49, 24, 54, 93, 57, 56, 76, 25, 90, 35, 73, 67, 83, 100, 74}) );
  }



  @Test
  public void test60(){
    assertEquals(286, solver.numberOfSubsets(new int[]{80, 10, 11, 34, 20, 33, 28, 10, 33, 34, 6, 73, 20, 10, 72, 29, 29, 26, 7, 20, 25, 60, 7, 15, 21, 20, 4, 11, 57, 79, 66, 11, 16, 24, 24, 70, 4, 12, 43, 36, 62, 68, 6, 40, 37, 59, 18, 2, 20, 75},new int[]{90, 72, 64, 36, 33, 99, 84, 44, 88, 91, 74, 84, 67, 64, 94, 72, 91, 92, 42, 85, 75, 78, 13, 59, 86, 78, 13, 35, 79, 79, 66, 91, 83, 81, 74, 72, 8, 53, 98, 93, 98, 97, 37, 58, 67, 64, 40, 36, 29, 88}) );
  }



  @Test
  public void test61(){
    assertEquals(7402, solver.numberOfSubsets(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50},new int[]{10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59}) );
  }



  @Test
  public void test62(){
    assertEquals(220, solver.numberOfSubsets(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50},new int[]{30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79}) );
  }



  @Test
  public void test63(){
    assertEquals(1220, solver.numberOfSubsets(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50},new int[]{16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65}) );
  }



  @Test
  public void test64(){
    assertEquals(747, solver.numberOfSubsets(new int[]{1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 1, 3},new int[]{1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 4, 6}) );
  }



  @Test
  public void test65(){
    assertEquals(43049637, solver.numberOfSubsets(new int[]{1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 1, 8},new int[]{1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 10, 16}) );
  }



  @Test
  public void test66(){
    assertEquals(86093442, solver.numberOfSubsets(new int[]{1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17},new int[]{1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17}) );
  }



  @Test
  public void test67(){
    assertEquals(4, solver.numberOfSubsets(new int[]{1, 1, 3, 3},new int[]{2, 2, 4, 4}) );
  }



  @Test
  public void test68(){
    assertEquals(1716, solver.numberOfSubsets(new int[]{95, 90, 95, 97, 91, 93, 90, 97, 96, 94, 99, 97, 96, 90, 95, 90, 90, 93, 96, 91, 90, 99, 99, 90, 94, 91, 97, 92, 97, 93, 99, 93, 97, 91, 95, 99, 92, 95, 91, 94, 97, 93, 92, 90, 99, 98, 93, 93, 93, 98},new int[]{95, 91, 95, 97, 95, 99, 98, 100, 97, 99, 100, 98, 97, 90, 97, 93, 94, 96, 97, 91, 94, 100, 100, 92, 99, 97, 98, 95, 99, 99, 99, 93, 98, 98, 100, 99, 100, 100, 95, 96, 100, 95, 94, 100, 99, 100, 96, 100, 96, 100}) );
  }



  @Test
  public void test69(){
    assertEquals(1221537, solver.numberOfSubsets(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50},new int[]{2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51}) );
  }



  @Test
  public void test70(){
    assertEquals(33554432, solver.numberOfSubsets(new int[]{1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25},new int[]{1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25}) );
  }



  @Test
  public void test71(){
    assertEquals(7536, solver.numberOfSubsets(new int[]{1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 11, 12, 12, 12, 13, 11, 15, 15, 16, 17, 18, 19, 19, 21, 22, 22, 23, 24, 27, 28, 29, 29, 31, 31, 12},new int[]{12, 6, 5, 5, 8, 5, 9, 10, 11, 9, 13, 12, 18, 25, 14, 14, 17, 19, 19, 21, 20, 19, 19, 23, 24, 25, 25, 26, 30, 30, 32, 31, 31, 33, 18}) );
  }



  @Test
  public void test72(){
    assertEquals(33554432, solver.numberOfSubsets(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25},new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}) );
  }



  @Test
  public void test73(){
    assertEquals(19895, solver.numberOfSubsets(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 5, 5, 5, 5, 50, 50, 51, 51, 51, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 73, 10, 20, 30, 40, 50, 60, 70, 80, 90, 90, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83},new int[]{10, 2, 30, 14, 50, 7, 17, 8, 90, 10, 55, 15, 15, 7, 50, 51, 51, 52, 99, 77, 77, 77, 97, 75, 96, 95, 80, 79, 90, 77, 99, 69, 39, 70, 58, 65, 75, 85, 95, 99, 22, 34, 41, 48, 55, 62, 68, 75, 82, 83}) );
  }



  @Test
  public void test74(){
    assertEquals(86093442, solver.numberOfSubsets(new int[]{1, 1, 1, 4, 4, 4, 7, 7, 7, 10, 10, 10, 13, 13, 13, 16, 16, 16, 19, 19, 19, 22, 22, 22, 25, 25, 25, 28, 28, 28, 31, 31, 31, 34, 34, 34, 37, 37, 37, 40, 40, 40, 43, 43, 43, 46, 46, 46, 49, 49},new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}) );
  }



  @Test
  public void test75(){
    assertEquals(866, solver.numberOfSubsets(new int[]{60, 8, 25, 40, 60, 32, 13, 62, 55, 51, 90, 32, 31, 19, 54, 22, 56, 2, 51, 12, 2, 47, 54, 88, 43, 10, 4, 1, 9, 29, 10, 51, 12, 33, 4, 79, 26, 6, 1, 42, 92, 29, 52, 2, 43, 60, 64, 34, 29, 49},new int[]{79, 80, 63, 79, 82, 78, 73, 84, 57, 73, 97, 33, 40, 65, 76, 81, 65, 6, 70, 83, 68, 91, 90, 91, 55, 50, 39, 52, 33, 82, 27, 91, 38, 69, 70, 90, 33, 76, 17, 52, 99, 30, 72, 64, 50, 69, 75, 39, 78, 53}) );
  }



  @Test
  public void test76(){
    assertEquals(1024, solver.numberOfSubsets(new int[]{1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10},new int[]{1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10}) );
  }



  @Test
  public void test77(){
    assertEquals(1, solver.numberOfSubsets(new int[]{1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99},new int[]{2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100}) );
  }



  @Test
  public void test78(){
    assertEquals(1, solver.numberOfSubsets(new int[]{1, 2, 3},new int[]{1, 2, 3}) );
  }



  @Test
  public void test79(){
    assertEquals(2, solver.numberOfSubsets(new int[]{1, 1, 3},new int[]{4, 2, 4}) );
  }



  @Test
  public void test80(){
    assertEquals(14, solver.numberOfSubsets(new int[]{2, 3, 4, 4, 4, 4, 2, 2, 1},new int[]{3, 5, 4, 5, 4, 5, 3, 2, 4}) );
  }



  @Test
  public void test81(){
    assertEquals(1, solver.numberOfSubsets(new int[]{1, 3, 5},new int[]{2, 4, 6}) );
  }



  @Test
  public void test82(){
    assertEquals(1, solver.numberOfSubsets(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50},new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}) );
  }



  @Test
  public void test83(){
    assertEquals(4, solver.numberOfSubsets(new int[]{4, 3, 4, 2, 1},new int[]{4, 3, 5, 2, 3}) );
  }



  @Test
  public void test84(){
    assertEquals(58106, solver.numberOfSubsets(new int[]{90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2},new int[]{99, 97, 95, 93, 91, 89, 87, 85, 83, 81, 79, 77, 75, 73, 71, 69, 67, 65, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11}) );
  }



}

